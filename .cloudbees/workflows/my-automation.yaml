apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My Automation Workflow
on:
  push:
    branches:
      - main

jobs:
  Checkout:
    steps:
      - name: Checkout code
        uses: cloudbees-io/checkout@v1

  Build:
    needs: Checkout
    steps:
      - name: Set Docker Daemon permissions
        uses: docker://alpine:latest
        entrypoint: ["/bin/sh", "-c"]
        run: |
           chmod 666 /var/run/docker.sock

      - name: Build with Maven
        uses: docker://maven:3-eclipse-temurin-17
        entrypoint: ["/bin/sh", "-c"]
        run: |
          mvn clean install -DskipTests=true

  StaticAnalysis:
    needs: Build
    steps:
      - name: SonarQube Analysis
        uses: cloudbees-io/sonarqube-sast-scan-code@v1
        with:
          server-url: https://sonarqube.cb-demos.io
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          language: Java

      - name: Find Security Bugs Scan
        uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        with:
          language: JAVA

  ArtifactPublish:
    needs: StaticAnalysis
    steps:
      - name: Publish to Nexus Repository
        uses: docker://maven:3-eclipse-temurin-17
        entrypoint: ["/bin/sh", "-c"]
        environment:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          mvn deploy -DskipTests -DaltDeploymentRepository=nexus::default::https://${NEXUS_USERNAME}:${NEXUS_PASSWORD}@nexus.preview.cb-demos.io/repository/Petclinic/

  DockerImageBuild:
    needs: ArtifactPublish
    steps:
      - name: Set Docker Daemon permissions
        uses: docker://alpine:latest
        entrypoint: ["/bin/sh", "-c"]
        run: |
           chmod 666 /var/run/docker.sock

      - name: DockerBuild
        uses: docker://alpine:latest
        entrypoint: ["/bin/sh", "-c"]
        environment:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build -t $DOCKER_USERNAME/config:3.2.4 .
