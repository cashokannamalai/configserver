apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  push:
    branches:
      - main
jobs:
  Checkout:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1

  Build:
    needs: Checkout
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Build
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install

  UnitTest:
    needs: Build
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Unit Test
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test

  StaticAnalysis:
    steps:
      - uses: cloudbees-io/sonarqube-sast-scan-code@v1
        name: Scan
        kind: scan
        with:
          server-url: https://sonarqube.cb-demos.io
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          language: Java

      - uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        name: Scan with Java
        kind: scan
        with:
          language: JAVA

      - uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        name: Scan with Find Security Bugs
        kind: scan
        with:
          language: LANGUAGE_JAVA

      - uses: sbatchelder-cba/sonarqube-cba@v0.0.3
        name: Scan GP
        with:
          project-key: config-server
          token: ${{ secrets.token }}

      - name: Fetch SonarQube Issues
        uses: docker://alpine/git:latest
        run: |
          apk add --no-cache curl jq
          curl -u ${{ secrets.username }}:${{ secrets.password }} \
          "https://sonarqube.cb-demos.io/api/issues/search?componentKeys=config-server&severities=BLOCKER,CRITICAL,MAJOR" \
          -o sonar-issues.json

          BLOCKER_COUNT=$(jq '[.issues[] | select(.severity=="BLOCKER")] | length' sonar-issues.json)
          CRITICAL_COUNT=$(jq '[.issues[] | select(.severity=="CRITICAL")] | length' sonar-issues.json)
          MAJOR_COUNT=$(jq '[.issues[] | select(.severity=="MAJOR")] | length' sonar-issues.json)

          echo "| Severity | Count |"
          echo "|----------|-------|" 
          echo "| Blocker  | $BLOCKER_COUNT |" 
          echo "| Critical | $CRITICAL_COUNT |" 
          echo "| Major    | $MAJOR_COUNT |"

  ArtifactPublish:
    needs: UnitTest
    steps:
      - uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Publish to Nexus
        uses: docker://maven:3-eclipse-temurin-17
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          mvn deploy \
            -DaltDeploymentRepository=nexus::default::https://${NEXUS_USERNAME}:${NEXUS_PASSWORD}@nexus.cb-demos.io/repository/Petclinic/

  DockerImageBuildAndPush:
    needs: ArtifactPublish
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Build Docker Image
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install -DskipTests=true
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.STAGING_DOCKER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}
      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.STAGING_DOCKER_REGISTRY }}/${{ secrets.STAGING_DOCKER_USERNAME }}/configserver:3.2.4

  Approval:
    needs: DockerImageBuildAndPush
    type: manual-approval
    environment: ashok
    steps:
      - name: Approval
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          echo "Manual approval required before proceeding to deployment."

  SmokeTest:
    needs: Approval
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Smoke Test
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test

  DeployInGKE:
    needs: SmokeTest
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: docker://bitnami/kubectl:latest
        name: Deploy image
        shell: sh
        run: |
          kubectl apply -f /cloudbees/workspace/deployment-service.yaml

  CommitInfoStage:
    needs: DeployInGKE
    outputs:
         COMMIT_ID: ${{ steps.CommitInfoStage.outputs.commit_id }}
         COMMIT_MSG: ${{ steps.CommitInfoStage.outputs.commit_msg }}
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Ensure Directory Exists
        uses: docker://alpine:latest
        run: |
          mkdir -p /cloudbees/workspace
      - name: Capture Commit Information
        id: commitinfo
        uses: docker://alpine/git:latest
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=format:%s)
          echo "commit_id=$COMMIT_ID" >> /cloudbees/workspace/$GITHUB_ENV
          echo "commit_msg=$COMMIT_MSG" >> /cloudbees/workspace/$GITHUB_ENV
          echo "Commit ID: $COMMIT_ID" > /cloudbees/workspace/commit-info.txt
          echo "Commit Message: $COMMIT_MSG" >> /cloudbees/workspace/commit-info.txt
          echo "SonarQube Results:" >> /cloudbees/workspace/commit-info.txt
          cat /cloudbees/workspace/sonar-metrics.txt >> /cloudbees/workspace/commit-info.txt
    

      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global user.email "c_aannamalai@cloudbees.com"
          git config --global user.name "cashokannamalai"

      - name: Commit and Push Commit Info
        uses: docker://alpine/git:latest
        run: |
          git add /cloudbees/workspace/commit-info.txt /cloudbees/workspace/sonar-metrics.txt          git commit -m "Add commit information and SonarQube metrics from workflow"
          git push


  Evidence:
    needs: CommitInfoStage
    steps:
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |+
            - Workflow ID: ${{ cloudbees.run_id }}
            - URL: ${{ cloudbees.api.url }}
            - Commit ID: ${{ needs.CommitInfoStage.outputs.COMMIT_ID }}
            - Commit Message: ${{ needs.CommitInfoStage.outputs.COMMIT_MSG }}
