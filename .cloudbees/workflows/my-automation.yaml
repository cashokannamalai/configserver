apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  push:
    branches:
      - main
jobs:
  Checkout:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1

  Build:
    needs: Checkout
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
        
      - uses: cloudbees-io/cbci-run-job@v2
        name: Build
        kind: build
        with:
          url: https://sda.preview.cb-demos.io/ashok-petclinic/
          username:  c_aannamalai
          token: ${{ secrets.SNAQVI_CI_TOKEN }}
          job-name: spring-petclinic/job/spring-petclinic-config-server
          test-type: Junit
          test-result-location: testReport

  UnitTest:
    needs: Build
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1

      - name: Publish test results
        uses: cloudbees-io/publish-test-results@v1
        with:
          test-type: JUnit
          folder-name: target/surefire-reports

  StaticAnalysis:
    steps:
      - uses: cloudbees-io/sonarqube-sast-scan-code@v1
        name: Scan
        kind: scan
        with:
          server-url: https://sonarqube.cb-demos.io
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          language: Java
      - uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        name: Scan with Java
        kind: scan
        with:
          language: JAVA
      - uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        name: Scan with Find Security Bugs
        kind: scan
        with:
          language: LANGUAGE_JAVA
      - uses: sbatchelder-cba/sonarqube-cba@v0.0.3
        name: Scan GP
        with:
          project-key: config-server
          token: ${{ secrets.token }}

     

  DockerImageBuildAndPush:
    needs: UnitTest
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Build Docker Image
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install -DskipTests=true
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.STAGING_DOCKER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}

      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.STAGING_DOCKER_REGISTRY }}/${{ secrets.STAGING_DOCKER_USERNAME }}/configserver:3.2.4

  Approval:
    needs: DockerImageBuildAndPush
    type: manual-approval
    environment: ashok
    steps:
      - name: Approval
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          echo "Manual approval required before proceeding to deployment."

  DeployInGKE:
    needs: Approval
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
        
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: docker://bitnami/kubectl:latest
        name: Deploy image
        shell: sh
        run: |
          kubectl apply -f /cloudbees/workspace/deployment-service.yaml
          
  CommitInfoStage:
    needs: DeployInGKE
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
        
      - name: Capture Commit Information
        id: commitinfo
        uses: docker://alpine/git:latest
        run: |
          apk add --no-cache jq
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=format:%s)
          echo "::set-output name=commit_id::$COMMIT_ID"
          echo "::set-output name=commit_msg::$COMMIT_MSG"
          BUILD_URL="https://sda.preview.cb-demos.io/ashok-petclinic/build/${{ cloudbees.run_id }}"
          echo "BUILD_URL=$BUILD_URL"
          echo "COMMIT_ID=$COMMIT_ID" 
          echo "COMMIT_MSG=$COMMIT_MSG"

  Evidence:
    needs: CommitInfoStage
    steps:
      - uses: cloudbees-io/publish-evidence-item@v1
        name: Publish workflow evidence
        with:
         content: |-
           - Workflow ID: ${{ cloudbees.run_id }}
           - BUILD_URL="https://sda.preview.cb-demos.io/ashok-petclinic/build/${{ cloudbees.run_id }}"
          