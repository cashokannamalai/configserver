apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  push:
    branches:
      - main
jobs:
  Checkout:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
  Build:
    needs: Checkout
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Build
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install 
  UnitTest:
    needs: Build
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: unittest
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test 
  StaticAnalysis:
    steps:
      - uses: cloudbees-io/sonarqube-sast-scan-code@v1
        name: Scan
        kind: scan
        with:
          server-url: https://sonarqube.cb-demos.io
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          language: Java
      - uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        name: Scan with Java
        kind: scan
        with:
          language: JAVA
      - uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        name: Scan with Find Security Bugs
        kind: scan
        with:
          language: LANGUAGE_JAVA
      - uses: sbatchelder-cba/sonarqube-cba@v0.0.3
        name: Scan GP
        with:
          project-key: config-server
          token: ${{ secrets.token }}
  DockerImageBuildAndPush:
    needs: UnitTest
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Build Docker Image
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install -DskipTests=true
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.STAGING_DOCKER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}
      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.STAGING_DOCKER_REGISTRY }}/${{
            secrets.STAGING_DOCKER_USERNAME }}/configserver:3.2.4
  Approval:
    needs: DockerImageBuildAndPush
    type: manual-approval
    environment: ashok
    steps:
      - name: Approval
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          echo "Manual approval required before proceeding to deployment."
  SmokeTest:
    needs: Approval
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: smoke
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test 
  DeployInGKE:
    needs: SmokeTest
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: docker://bitnami/kubectl:latest
        name: Deploy image
        shell: sh
        run: |
          kubectl apply -f /cloudbees/workspace/deployment-service.yaml
  CommitInfoStage:
    needs: DeployInGKE
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Unittest
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test
      - name: Capture Commit Information
        id: commitinfo
        uses: docker://alpine/git:latest
        run: >
          apk add --no-cache jq

          COMMIT_ID=$(git rev-parse HEAD)

          COMMIT_MSG=$(git log -1 --pretty=format:%s)

          echo "Commit ID: $COMMIT_ID" > commit-info.txt

          echo "Commit Message: $COMMIT_MSG" >> commit-info.txt

          echo "Unit Test Results:" >> commit-info.txt

          cat /cloudbees/workspace/target/surefire-reports/*.txt >>
          commit-info.txt
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global user.email "c_aannamalai@cloudbees.com"
          git config --global user.name "cashokannamalai"
      - name: Commit and Push Commit Info
        uses: docker://alpine/git:latest
        run: |+
          git add commit-info.txt
          git commit -m "Add commit information from workflow"
          git push

            
  Evidence:
   needs: CommitInfoStage
   steps:
    - name: Fetch SonarQube Issue Counts
      id: fetch-sonarqube-issues
      uses: docker://alpine:latest
      env:
        SONAR_URL: https://sonarqube.cb-demos.io
        PROJECT_KEY: config-server
        SONAR_TOKEN: ${{ secrets.token }}
      run: |
        apk add --no-cache curl jq
        BLOCKER_COUNT=$(curl -s -u $SONAR_TOKEN: "$SONAR_URL/api/issues/search?componentKeys=$PROJECT_KEY&severities=BLOCKER&resolved=false" | jq '.total')
        MAJOR_COUNT=$(curl -s -u $SONAR_TOKEN: "$SONAR_URL/api/issues/search?componentKeys=$PROJECT_KEY&severities=MAJOR&resolved=false" | jq '.total')
        CRITICAL_COUNT=$(curl -s -u $SONAR_TOKEN: "$SONAR_URL/api/issues/search?componentKeys=$PROJECT_KEY&severities=CRITICAL&resolved=false" | jq '.total')
        MINOR_COUNT=$(curl -s -u $SONAR_TOKEN: "$SONAR_URL/api/issues/search?componentKeys=$PROJECT_KEY&severities=MINOR&resolved=false" | jq '.total')
        
        echo "BLOCKER_COUNT=$BLOCKER_COUNT" >> $CLOUDBEES_WORKSPACE/environment.env
        echo "MAJOR_COUNT=$MAJOR_COUNT" >> $CLOUDBEES_WORKSPACE/environment.env
        echo "CRITICAL_COUNT=$CRITICAL_COUNT" >> $CLOUDBEES_WORKSPACE/environment.env
        echo "MINOR_COUNT=$MINOR_COUNT" >> $CLOUDBEES_WORKSPACE/environment.env

    - name: Publish evidence
      uses: cloudbees-io/publish-evidence-item@v1 
      with:
        content: |
          - Workflow ID: ${{ cloudbees.run_id }}
          - URL: ${{ cloudbees.api.url }}
          ## SonarQube Issues
          - Blocker Issues: $(cat $CLOUDBEES_WORKSPACE/environment.env | grep BLOCKER_COUNT | cut -d'=' -f2)
          - Major Issues: $(cat $CLOUDBEES_WORKSPACE/environment.env | grep MAJOR_COUNT | cut -d'=' -f2)
          - Critical Issues: $(cat $CLOUDBEES_WORKSPACE/environment.env | grep CRITICAL_COUNT | cut -d'=' -f2)
          - Minor Issues: $(cat $CLOUDBEES_WORKSPACE/environment.env | grep MINOR_COUNT | cut -d'=' -f2)
          ## Smoketest results
          | Test    | Runtime (m:s) | Result |
          | -------- | ------- | -- |
          | [FE1]()  | 1:15 | PASS    |
          | [BE2]() | 10:05 | PASS     |
          | [INT1]()    | 15:15 | **FAIL**    |
          | [INT2]()    | 20:10* |_RUNNING_    |
