apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: MyAutomationWorkflow
on:
  push:
    branches:
      - main
jobs:
  Checkout:
    steps:
      - name: Checkout Code
        uses: cloudbees-io/checkout@v1
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_id=${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "commit_msg=${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg
    outputs:
      commit_id: ${{ steps.commitinfo.outputs.commit_id }}
      commit_msg: ${{ steps.commitinfo.outputs.commit_msg }}

  Build:
    needs: Checkout
    kind: Build
    environment: production  
    steps:
      - name: Configure Git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout Code
        uses: cloudbees-io/checkout@v1
      - name: Build Project
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install
          
      - name: Run Unit Tests
        id: RunUnitTest
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test > "$CLOUDBEES_OUTPUTS/mvn_test_stdio"
          cat "$CLOUDBEES_OUTPUTS/mvn_test_stdio" | grep "Tests run:" | tail -1
          echo "unit_test_results=$(cat "$CLOUDBEES_OUTPUTS/mvn_test_stdio" | grep "Tests run:" | tail -1)" >> $CLOUDBEES_OUTPUTS/unit_test_results
    outputs:
      unit_test_results: ${{ steps.RunUnitTest.outputs.unit_test_results }}

  NotifyJira:
    needs: Build
    steps:
      - name: Post Build Status to JIRA
        uses: docker://alpine:latest
        run: |
          curl -X POST "https://cloudbees.atlassian.net//rest/api/3/issue/CBDEMO/comment" \
          -H "Authorization: Basic $(echo -n '${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64)" \
          -H "Content-Type: application/json" \
          -d '{
            "body": "Build completed for commit '${{ steps.commitinfo.outputs.commit_id }}'. Commit message: '${{ steps.commitinfo.outputs.commit_msg }}'. Unit test results: '${{ steps.RunUnitTest.outputs.unit_test_results }}'."
          }'
